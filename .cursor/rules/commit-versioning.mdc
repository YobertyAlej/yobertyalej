---
description: 
globs: 
alwaysApply: false
---
---
description: Reglas para commits que actualizan la versión y el changelog
globs: ["CHANGELOG.md", "package.json"]
alwaysApply: false
---

# Reglas para Commits de Actualización de Versión

Cuando estás realizando un commit que actualiza la versión del proyecto:

## Formato del Commit

El mensaje de commit debe seguir este formato:

```
chore(release): preparar versión X.Y.Z
```

## Proceso de Actualización

1. Actualiza el número de versión en `package.json`
2. Actualiza `CHANGELOG.md`:
   - Cambia `[Unreleased]` a `[X.Y.Z] - YYYY-MM-DD` (fecha actual)
   - Crea una nueva sección vacía `[Unreleased]` con las categorías estándar
   - Actualiza los enlaces de comparación al final del documento

## Ejemplo de Cambios en el Changelog

```diff
- ## [Unreleased]
+ ## [Unreleased]
+
+### Añadido
+
+### Cambiado
+
+### Corregido
+
+ ## [0.2.0] - 2025-05-15
  ### Añadido
  - Implementada integración básica de Three.js
```

## Enlaces de comparación

Actualiza los enlaces al final del documento:
```diff
- [Unreleased]: https://github.com/username/portfolio/compare/v0.1.0...HEAD
+ [Unreleased]: https://github.com/username/portfolio/compare/v0.2.0...HEAD
+ [0.2.0]: https://github.com/username/portfolio/compare/v0.1.0...v0.2.0
  [0.1.0]: https://github.com/username/portfolio/releases/tag/v0.1.0
```

## Consideraciones Importantes

- Solo incluye cambios significativos que afecten a los usuarios
- Agrupa cambios relacionados para que el changelog sea claro y legible
- Evita duplicar información ya presente en los mensajes de commit
- Asegúrate de que el número de versión sigue el versionamiento semántico:

  - MAJOR: Cambios incompatibles
  - MINOR: Nuevas funcionalidades compatibles
  - PATCH: Correcciones compatibles
